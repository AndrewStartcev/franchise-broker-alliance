/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/
/***/ (function() {

eval("const burgerButton = document.querySelector('.header__burger');\r\nconst menu = document.querySelector('.header-menu');\r\n\r\nburgerButton.addEventListener('click', function () {\r\n  burgerButton.classList.toggle('active');\r\n  menu.classList.toggle('menu--active');\r\n});\r\n\r\n\r\nconst tabButtons = document.querySelectorAll('.tab-head__btn');\r\nconst tabs = document.querySelectorAll('.tabs__item');\r\n\r\ntabButtons.forEach(button => {\r\n  button.addEventListener('click', () => {\r\n    const selectedTab = button.dataset.tab;\r\n    activateTab(selectedTab);\r\n  });\r\n});\r\n\r\nfunction activateTab(selectedTab) {\r\n  tabs.forEach(tab => {\r\n    if (tab.id === selectedTab.substring(1)) {\r\n      tab.classList.add('active');\r\n    } else {\r\n      tab.classList.remove('active');\r\n    }\r\n  });\r\n\r\n  tabButtons.forEach(button => {\r\n    if (button.dataset.tab === selectedTab) {\r\n      button.classList.add('active');\r\n    } else {\r\n      button.classList.remove('active');\r\n    }\r\n  });\r\n}\r\n\r\n\r\nconst accordionHeaders = document.querySelectorAll('.accordion-header');\r\n\r\naccordionHeaders.forEach(header => {\r\n  header.addEventListener('click', () => {\r\n    const accordionItem = header.parentElement;\r\n    const accordionBody = header.nextElementSibling;\r\n\r\n    accordionItem.classList.toggle('active');\r\n\r\n    if (accordionItem.classList.contains('active')) {\r\n      accordionBody.style.maxHeight = '100%';\r\n      accordionBody.style.display = 'block';\r\n    } else {\r\n      accordionBody.style.maxHeight = null;\r\n      accordionBody.style.display = 'none';\r\n    }\r\n\r\n    accordionHeaders.forEach(otherHeader => {\r\n      if (otherHeader !== header) {\r\n        const otherItem = otherHeader.parentElement;\r\n        otherItem.classList.remove('active');\r\n\r\n        otherItem.querySelector('.accordion-body').style.maxHeight = null;\r\n        otherItem.querySelector('.accordion-body').style.display = 'none';\r\n      }\r\n    });\r\n  });\r\n});\r\n\r\n// получаем все ссылки и кнопки с атрибутом data-popup\r\nconst popupTriggers = document.querySelectorAll('[data-popup]');\r\n\r\n// добавляем обработчик клика на каждую ссылку и кнопку\r\npopupTriggers.forEach(function (popupTrigger) {\r\n  popupTrigger.addEventListener('click', function (event) {\r\n    event.preventDefault(); // отменяем действие по умолчанию\r\n\r\n    // находим id popup элемента\r\n    const popupId = popupTrigger.getAttribute('data-popup');\r\n\r\n    // находим popup элемент по id\r\n    const popupElement = document.querySelector(`#${popupId}`);\r\n\r\n    // закрываем все открытые popup элементы\r\n    const popupElements = document.querySelectorAll('.popup.show');\r\n    popupElements.forEach(function (popupElement) {\r\n      popupElement.classList.remove('show');\r\n    });\r\n\r\n    // открываем выбранный popup элемент\r\n    popupElement.classList.add('show');\r\n  });\r\n});\r\n\r\n// получаем все кнопки закрытия popup элемента\r\nconst closeButtons = document.querySelectorAll('.popup__close, .popup-close');\r\n\r\n// функция для закрытия popup элемента\r\nfunction closePopup() {\r\n  const popupElements = document.querySelectorAll('.popup.show');\r\n  popupElements.forEach(function (popupElement) {\r\n    popupElement.classList.remove('show');\r\n  });\r\n}\r\n\r\n// добавляем обработчик клика на каждую кнопку закрытия popup элемента\r\ncloseButtons.forEach(function (closeButton) {\r\n  closeButton.addEventListener('click', function (event) {\r\n    event.preventDefault(); // отменяем действие по умолчанию\r\n    closePopup();\r\n  });\r\n});\r\n\r\n// добавляем обработчик события нажатия клавиши ESC\r\ndocument.addEventListener('keydown', function (event) {\r\n  if (event.key === 'Escape') {\r\n    closePopup();\r\n  }\r\n});\r\n\r\n\r\nfunction scrollToBlock(id) {\r\n  const block = document.getElementById(id);\r\n\r\n  if (block) {\r\n    const header = document.querySelector('.header');\r\n    const headerHeight = header ? header.offsetHeight : 0;\r\n\r\n    const top = block.getBoundingClientRect().top + window.pageYOffset - headerHeight;\r\n\r\n    window.scrollTo({\r\n      top,\r\n      behavior: 'smooth'\r\n    });\r\n  }\r\n}\r\n\r\n// добавляем обработчик клика на все ссылки с href, начинающимся с символа #\r\ndocument.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\r\n  anchor.addEventListener('click', function (event) {\r\n    event.preventDefault(); // отменяем действие по умолчанию\r\n    const id = this.getAttribute('href').substring(1);\r\n    scrollToBlock(id);\r\n  });\r\n});\r\n\r\n// добавляем обработчик клика на все кнопки с атрибутом data-scroll\r\ndocument.querySelectorAll('[data-scroll]').forEach(button => {\r\n  button.addEventListener('click', function (event) {\r\n    event.preventDefault(); // отменяем действие по умолчанию\r\n    const id = this.getAttribute('data-scroll');\r\n    scrollToBlock(id);\r\n  });\r\n});\r\n\n\n//# sourceURL=webpack://gulp-starter/./src/js/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/main.js"]();
/******/ 	
/******/ })()
;